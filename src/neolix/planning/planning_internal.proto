/* the protobuf for internal use within planning node */
syntax = "proto2";
package adu.common.planning_internal;

import "header.proto";
import "decision.proto";
import "global_adc_status.proto";
import "perception_obstacle.proto";
import "prediction_obstacle.proto";

message PlanningObstacle {
    optional int32 perception_id = 1;
    optional string decision_id = 2;

    optional adu.common.perception.Point position = 3;  // obstacle position in the world coordinate system.
    optional double theta = 4; // heading in the world coordinate system
    optional adu.common.perception.Point  velocity = 5;  // obstacle velocity.
    optional double speed = 6; // obstacle speed ( == sqrt(velocity.x^2 + velocity.y^2)

    // Size of obstacle bounding box.
    optional double length = 7;  // obstacle length.
    optional double width = 8;  // obstacle width.
    optional double height = 9;  // obstacle height.

    repeated adu.common.perception.Point polygon_point = 10;  // obstacle corner points.
    optional double tracking_time = 11;  // duration of an obstacle since detection.

    optional double perception_timestamp = 12;  // perception timestamp in ms
    // object type in perception
    optional adu.common.perception.PerceptionObstacle.Type perception_object_type = 13;

    optional double prediction_timestamp = 14; // prediction_timestamp in ms
    repeated adu.common.prediction.Trajectory prediction_trajectory = 15; // from prediction

    // object type in decision
    optional adu.common.decision.ObjectDecision.ObjectType decision_object_type = 16;
    optional adu.common.decision.ObjectDecisionType object_decision = 17 [deprecated = true];
    repeated adu.common.decision.ObjectDecisionType planning_object_decision = 18;
}

message Debug {
    enum ErrorCode {
        OK = 0;
        ERR_NOT_READY = 1;
        ERR_ESTOP = 2;
        ERR_PATH_OPTIMIZER = 3;
        ERR_SPEED_OPTIMIZER = 4;
        ERR_ST_GRAPH = 5;
        ERR_SANITY_CHECK = 6;
    }

    /*
        PLEASE add id here
        id = 1: st_graph_info
    */
    message DebugMessage {
        optional ErrorCode error_code = 1 [default = OK];
        optional int32 id = 2;
        oneof debug_string {
            string trace = 3;
            string info = 4;
            string warn = 5;
            string error = 6;
            string fatal = 7;
        }
    }

    optional ErrorCode error_code = 1 [default = OK];
    optional PlanningData planning_data = 2;
    repeated DebugMessage debug_message = 3;
}

message PlanningData {
    optional adu.common.header.Header header = 1;
    optional adu.common.status.Status init_status = 2; // initial status of adc
    optional adu.common.decision.MainDecision main_decision = 3; // from decision
    repeated PlanningObstacle planning_obstacle = 4; // processed planning_obstacles
    optional adu.common.decision.LightSignal light_signal = 5; // light signal from decision
}
