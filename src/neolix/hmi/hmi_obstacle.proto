// Defines the message about obstacle show demand.
syntax = "proto2";
package adu.hmi;

option java_multiple_files = true;

import "hmi_common.proto";

// Decision msg of obstacles, get from dv
message Decision {
    enum Type {
        IGNORE = 0; // Ignore the object
        STOP = 1; // Stop at a distance from the object
        NUDGE = 2; // Go around the object
        YIELD = 3; // Go after the object
        OVERTAKE = 4; // Go before the object
        FOLLOW = 5; // Follow the object in the same lane
        SIDEPASS = 6; // Pass the object in neighbouring lane
    }

    enum StopReasonCode {
        STOP_REASON_HEAD_VEHICLE = 1;
        STOP_REASON_DESTINATION = 2;
        STOP_REASON_PEDESTRIAN = 3;
        STOP_REASON_OBSTACLE = 4;
        STOP_REASON_SIGNAL = 100;
        STOP_REASON_STOP_SIGN = 101;
        STOP_REASON_YIELD_SIGN = 102;
        STOP_REASON_CLEAR_ZONE = 103;
        STOP_REASON_CROSSWALK = 104;
        STOP_REASON_EMERGENCY = 105;
        STOP_REASON_NOT_READY = 106;
    }

    required double timestamp = 1;          // time of decision
    required Type type = 2 [default = IGNORE];

    // Position Info, can be used for stop fence
    optional PolygonPoint position = 3;     // position of decision fence
    optional double heading = 4;

    // Shape Info, can be used for corners of nudge region
    repeated PolygonPoint polygon_point = 5;    // shape of nudge decision

    // optional StopReasonCode stopReason = 6;
}

// Prediction line message of obstacle
message Prediction {
    required double timestamp = 1;      // time of prediction
    optional double probability = 2;
    repeated PolygonPoint predicted_trajectory = 3;
}

// The obstacle unit object message
message ObstacleObject {
    enum Type {
        UNKNOWN = 0;
        UNKNOWN_MOVABLE = 1;
        UNKNOWN_UNMOVABLE = 2;
        PEDESTRIAN = 3;     // pedestrian, usually determined by moving behaviour.
        BICYCLE = 4;        // bike, motor bike.
        VEHICLE = 5;        // passenger car or truck.
        VIRTUAL = 6;        // virtual object created by decision module.
    }

    required double timestamp = 1;         // time of perception obstacle
    optional string id = 2;             // primary identifier for each object
    optional Type type = 3;         // type of obstacle
    repeated PolygonPoint polygon_point = 4;    // corners of an object
    optional double heading = 5;
    optional PolygonPoint position = 6;             // each obstacle's location
    optional double length = 7 [default = 2.8];
    optional double width = 8 [default = 1.4];
    optional double height = 9 [default = 1.8];
    optional double distance = 10;      // distance between adc & obstacle

    repeated Decision decision = 12;        // decision of each obst
    repeated Prediction prediction = 13;    // prediction of each obst

    optional bool in_blindarea = 20; //only for microcar default false
}

